
Linux哲学

简单性：小而简单，工具小且易于理解
集中性：每个程序都只有单一目标，将小工具组合起来完成复杂任务
可重用组建：将程序核心实现为库，具有简单而灵活的编程接口
过滤器：许多程序都可以作为过滤器，对输入进行转换产生输出
开放的文件格式：使用纯ASCII码的文本格式或XML文件作为配置文件

GCC编译选项：

1. GCC默认链接C库，从/lib和/usr/lib目录链接
    
    
2. 编译选项

	-c	只编译，不链接
	-I	添加头文件的搜索路径 -I/usr/openwin/include
	-o	指定编译要生成的目标文件名
	-l	制定要链接的静态库或动态库
	-L	添加链接库的搜索路径
    
    -g  编译调试版文件
    
3. 静态库也称为归档文件 archive，以 .a 结尾。
	首先gcc -c 编译文件，然后使用 ar 工具对文件进行归档

	ar crv libfoo.a fred.o bill.o	// 将两个文件打包为归档文件

	打包后，需要使用 ranlib 命令将打包后的文件生成一个内容表

4.动态库
	避免静态链接的多出调用将多份代码都编译进一个文件中，占用额外空间。

	应用程序启动时搜索动态库的配置在 /etc/ld.so.conf文件中。ldconfig可以进行配置

	ldd 程序可以查看一个程序需要的共享库
	
5. 文件/目录操作
    
    open / read / write / lseek / ioctl / close 系统调用
        
        fstat / stat / lstat / dup / dup2 获取文件状态信息
        
    fopen / fread / fwrite / fseek / fflush / fclose 等库函数 （fileno将库函数使用文件句柄和系统调用文件句柄转换）
    
    fgetc / getc / getchar
    fputc / putc / putchar 等库函数
    
    printf / fprintf / sprintf  等字符串格式化函数
    scanf / fscanf / sscanf 
    
    chmod / chown / unlink / link / symlink / mkdir / rmdir / chdir / getcwd 等目录操作系统调用
    
    opendir / readdir / telldir / seekdir / closedir 等目录遍历系统调用
    
    strerror / perror 将错误码转换为字符串
    
    程序参数处理 / 环境变量 / 时间与日期 / 用户信息 / 主机信息 / 资源限制